"""
Django settings for mysite project.

Generated by 'django-admin startproject' using Django 2.2.3.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '=tyk+qgh9twj81bc09-8xz_eck7v87=%x$e_^^i%wg^_t5xvc2'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    # REST framework
    'rest_framework',
    'rest_framework.authtoken',
    'django_grpc',
    # Custom apps
    'feedback',
    'imageupload',
    'accounts',
    'polls.apps.PollsConfig',
    'snippets.apps.SnippetsConfig',
]

GRPCSERVER = {
'servicers': ['polls.protos.user_server.serve'],
# 'interceptors': ['dotted.path.to.interceptor_class',],
'maximum_concurrent_rpcs': None,
}

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'polls.middleware.CustomMiddleware',
]

ROOT_URLCONF = 'mysite.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'mysite.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
#     }
# }
import configparser
config = configparser.ConfigParser()
config.read("envkeys.ini")

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',# postgresql_psycopg2
        'NAME': config.get('database', 'name'),
        'USER': config.get('database', 'username'),
        'PASSWORD': config.get('database', 'password'),
        'HOST': config.get('database', 'host'),
        'PORT': config.get('database', 'port'),
    }
}

CACHES = {
    'default': {
        'BACKEND': 'django.core.cache.backends.memcached.MemcachedCache',
        'LOCATION': config.get('memcache','host'),
    }
}

INTERNAL_API_KEY = '1234'
# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/

STATIC_URL = '/static/'
REST_FRAMEWORK = {
    'DEFAULT_PARSER_CLASSES': [
        # set Content-Type in request header to parse data properly
        'rest_framework.parsers.MultiPartParser',
        'rest_framework.parsers.FormParser',
        'rest_framework.parsers.JSONParser',
        'rest_framework_xml.parsers.XMLParser', # https://jpadilla.github.io/django-rest-framework-xml/
    ],
    'DEFAULT_RENDERER_CLASSES': (
        # set Accept in request header to render data properly
        'rest_framework.renderers.JSONRenderer',
        'rest_framework_xml.renderers.XMLRenderer', # https://jpadilla.github.io/django-rest-framework-xml/
    ),
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework.authentication.BasicAuthentication',
        'rest_framework.authentication.SessionAuthentication',
    ],
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticated',
    ],
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
    'PAGE_SIZE': 1


}

# CELERY STUFF


"""
CELERY_BROKER_URL = 'amqp://carousell:1234@10.53.19.214:5672/carousell'
CELERY_BROKER_URL = 'amqp://myuser:mypassword@localhost:5672/myvhost'
sudo rabbitmqctl add_user carousell 1234
sudo rabbitmqctl add_vhost carousell
sudo rabbitmqctl set_permissions -p carousell carousell ".*" ".*" ".*"
amqp://guest:guest@rabbitmq:5672/
"""
CELERY_BROKER_URL = 'amqp://' + config.get('rabbitmq','user') + ':' + config.get('rabbitmq','password') + '@'+ config.get('rabbitmq','host') +':5672/carousell'
CELERY_RESULT_BACKEND = 'redis://'+ config.get('redis-server','host') +'/0'
"""
CELERY_BROKER_URL = redis://:password@hostname:port/db_number
"""

# Image upload app settings
# pip install Pillow
MEDIA_ROOT = os.path.join(BASE_DIR, 'media') # C:\Users\kapil_jain\Psl-Django\mysite\media
MEDIA_URL = '/media/'


#'amqp://10.53.19.214' # 'redis://localhost:6379'
# CELERY_RESULT_BACKEND = 'redis://localhost:6379'
# CELERY_ACCEPT_CONTENT = ['application/json']
# CELERY_TASK_SERIALIZER = 'json'
# CELERY_RESULT_SERIALIZER = 'json'
# CELERY_TIMEZONE = 'Africa/Nairobi'
